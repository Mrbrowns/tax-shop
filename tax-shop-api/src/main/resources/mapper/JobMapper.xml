<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhsoft.api.mapper.JobMapper">
    <!-- Job的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Job_Map" type="com.yhsoft.api.entity.Job">
        <id column="id" property="id" />
        <result column="department_id" property="departmentId" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="allowance" property="allowance" />
        <result column="limit_employee" property="limitEmployee" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:job的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="job_Column">
        job.id as id
        ,job.department_id as department_id
        ,job.name as name
        ,job.description as description
        ,job.allowance as allowance
        ,job.limit_employee as limit_employee
    </sql>

    <!--获得类名为:Job对应的数据库表的数据总行数 -->
    <select id="getJobRowCount" parameterType="com.yhsoft.api.common.Assist" resultType="java.lang.Long">
        select count(id) from job
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:Job对应数据库中表的数据集合 -->
    <select id="selectJob" parameterType="com.yhsoft.api.common.Assist"  resultMap="result_Job_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="job_Column" /> 
            </otherwise>
        </choose>
        from job
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT id as primary_key FROM job
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=job.id
            </otherwise>
        </choose>
    </select> 

    <!-- 获得一个Job对象,以参数Job对象中不为空的属性作为条件进行查询-->
    <select id="selectJobByObj" parameterType="com.yhsoft.api.entity.Job" resultMap="result_Job_Map">
        select 
            <include refid="job_Column" /> 
        from job
        <where>
            <if test="limitEmployee != null "> and job.limit_employee = #{limitEmployee}</if>
            <if test="allowance != null "> and job.allowance = #{allowance}</if>
            <if test="description != null "> and job.description = #{description}</if>
            <if test="name != null "> and job.name = #{name}</if>
            <if test="departmentId != null "> and job.department_id = #{departmentId}</if>
            <if test="id != null "> and job.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Job的id获得对应数据库中表的数据对象-->
    <select id="selectJobById" parameterType="java.lang.Long" resultMap="result_Job_Map">
        select 
            <include refid="job_Column" /> 
        from job
        where job.id = #{id}
    </select> 

    <!-- 将Job插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertJob" parameterType="com.yhsoft.api.entity.Job">
        insert into job(id,department_id,name,description,allowance,limit_employee) 
        values(#{id},#{departmentId},#{name},#{description},#{allowance},#{limitEmployee})
    </insert>

    <!-- 将Job中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyJob" parameterType="com.yhsoft.api.entity.Job">
        insert into job
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="name != null">name,</if>
            <if test="description != null">description,</if>
            <if test="allowance != null">allowance,</if>
            <if test="limitEmployee != null">limit_employee,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="departmentId != null"> #{departmentId},</if>
            <if test="name != null"> #{name},</if>
            <if test="description != null"> #{description},</if>
            <if test="allowance != null"> #{allowance},</if>
            <if test="limitEmployee != null"> #{limitEmployee},</if>
        </trim>
    </insert>

    <!-- 将Job批量插入到对应数据库的表中-->
    <insert id="insertJobByBatch" parameterType="ArrayList">
        insert into job(id,department_id,name,description,allowance,limit_employee) values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.id},#{item.departmentId},#{item.name},#{item.description},#{item.allowance},#{item.limitEmployee})
        </foreach>
    </insert>

    <!-- 通过Job的id将数据库表中对应的数据删除-->
    <delete id="deleteJobById" parameterType="java.lang.Long">
        delete from job
        where id = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将Job对应的数据库表的数据删除-->
    <delete id="deleteJob" parameterType="com.yhsoft.api.common.Assist">
        delete from job
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过Job的id将Job的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateJobById" parameterType="com.yhsoft.api.entity.Job">
        update job set
            department_id=#{departmentId}
            ,name=#{name}
            ,description=#{description}
            ,allowance=#{allowance}
            ,limit_employee=#{limitEmployee}
        where id=#{id}
    </update>

    <!-- 通过Job的id将Job中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyJobById" parameterType="com.yhsoft.api.entity.Job">
        update job
        <set>
            <if test="departmentId != null">
                department_id=#{departmentId},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="description != null">
                description=#{description},
            </if>
            <if test="allowance != null">
                allowance=#{allowance},
            </if>
            <if test="limitEmployee != null">
                limit_employee=#{limitEmployee},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Job中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateJob" parameterType="map">
        update job
        <set>
                id=#{enti.id},
                department_id=#{enti.departmentId},
                name=#{enti.name},
                description=#{enti.description},
                allowance=#{enti.allowance},
                limit_employee=#{enti.limitEmployee},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Job中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyJob" parameterType="map">
        update job
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.departmentId != null">
                department_id=#{enti.departmentId},
            </if>
            <if test="enti.name != null">
                name=#{enti.name},
            </if>
            <if test="enti.description != null">
                description=#{enti.description},
            </if>
            <if test="enti.allowance != null">
                allowance=#{enti.allowance},
            </if>
            <if test="enti.limitEmployee != null">
                limit_employee=#{enti.limitEmployee},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>